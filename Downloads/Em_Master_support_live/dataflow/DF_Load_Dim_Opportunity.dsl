source(output(
		dwtc_oppsourcename as string,
		AgentID as string,
		StageCode as long,
		RequesterID as string,
		EventID as string,
		AccountID as string,
		DiscountAmount as decimal(38,2),
		RequestorType as long,
		TotalAmountofOpportunity as decimal(38,4),
		dwtc_sourcetype as long,
		CustomerId as string,
		LeadID as string,
		TradeAssocID as string,
		OpportunityId as string,
		StatusID as long,
		{CreatedOn-Opportunity} as string,
		dwtc_ordergrossarea as long,
		NetSQMofOpportunity as decimal(38,2),
		EventSectorID as string,
		dwtc_displaygrossarea as long,
		{RetainedY/N} as boolean,
		dwtc_opportunitysourcetype as long,
		OnwerID as string,
		ProbabilityCode as long,
		OpportunityClosingDate as timestamp,
		dwtc_area as long,
		owneridname as string,
		OpportunityNumber as string,
		parentcontactid as string,
		StagecodeValue as string,
		requestorTypeValue as string,
		Status as string
	),
	allowSchemaDrift: true,
	validateSchema: false,
	isolationLevel: 'READ_UNCOMMITTED',
	query: '\n     select c.*, e.[value] as StagecodeValue ,req.[value] as requestorTypeValue ,Status.[value] as Status\n  FROM [ods].[EM_Opportunity_CRM] c left join (select * from \n  [ods].[EM_StringMap_CRM]  a \n  where  [objecttypecode] = \'opportunity\' and [attributename]=\'dwtc_exhibitstage\') e\n  on c.[StageCode]=e.[attributevalue] left join (select * from \n  [ods].[EM_StringMap_CRM]  a \n  where  [objecttypecode] = \'opportunity\' and [attributename]=\'dwtc_opprequestertype\') req\n  on c.[RequestorType]=req.[attributevalue]  left join (select * from \n  [ods].[EM_StringMap_CRM]  a \n  where  [objecttypecode] = \'opportunity\' and [attributename]=\'statuscode\') Status\n  on c.statusid=req.[attributevalue]',
	format: 'query',
	staged: true) ~> OdsOpportunity
source(output(
		Contact_ID as integer,
		Contact_Code as string,
		Email as string,
		CompanyName as string,
		FirstName as string,
		LastName as string,
		JobTitle as string,
		DesignationLevel as string,
		Statecode as string,
		DateModified as timestamp,
		DateCreated as timestamp,
		MobilePhone as string,
		ContactType as string,
		Contact_GR_ID as integer,
		Company_ID as integer,
		Execution_Date as timestamp,
		Nationality as string,
		Jobfunction as long,
		Emailaddress2 as string,
		Address1_line1 as string,
		Address1_line2 as string,
		Cityname as string,
		Address1_postalcode as string,
		Country as string,
		Createdby as string,
		Modifiedby as string,
		GR_ID as string,
		Status as string,
		Prefix as string
	),
	allowSchemaDrift: true,
	validateSchema: false,
	isolationLevel: 'READ_UNCOMMITTED',
	format: 'table',
	staged: true) ~> DimContactCRM
source(output(
		Event_ID as integer,
		EventID as string,
		EventName as string,
		ShowName as string,
		ShowName2 as string,
		TypeID as long,
		EventStatus as long,
		EventStartDate as date,
		ShellScheme as decimal(38,2),
		SpecialStands as decimal(38,2),
		OutdoorSpaceOnly as decimal(38,2),
		SpaceOnlyAED as decimal(38,2),
		ShellSchemeSqm as decimal(38,2),
		SponsorshipAED as decimal(38,2),
		CorporateDeck as decimal(38,2),
		EventIDValue as string,
		ClusterName as string,
		Execution_Date as timestamp
	),
	allowSchemaDrift: true,
	validateSchema: false,
	isolationLevel: 'READ_UNCOMMITTED',
	format: 'table',
	staged: true) ~> DimEvent
source(output(
		Lead_ID as integer,
		Event_ID as integer,
		Country_ID as integer,
		statecode as string,
		Lead_Code as string,
		CreatedOn as timestamp,
		createdbyname as string,
		LeadSourceName as string,
		LeadSourceValue as string,
		LeadStatusReasonCode as string,
		LeadforSponsorship as string,
		LeadSourceType as string,
		FullName as string,
		IndustryName as string,
		ModifiedOn as timestamp,
		OwnerID as string,
		LeadQualityValue as string,
		Execution_Date as timestamp,
		jobtitle as string,
		emailaddress2 as string,
		telephone1 as string,
		mobilephone as string,
		address1_line1 as string,
		address1_line2 as string,
		dwtc_citylookupname as string,
		address1_postalcode as string,
		dwtc_regionname as string,
		firstname as string,
		lastname as string,
		emailaddress1 as string,
		modifiedby as string,
		Last_Verified_Date as timestamp,
		CompanyName as string
	),
	allowSchemaDrift: true,
	validateSchema: false,
	isolationLevel: 'READ_UNCOMMITTED',
	format: 'table',
	staged: true) ~> DimLead
OdsOpportunity, DimContactCRM lookup(parentcontactid == Contact_Code,
	multiple: false,
	pickup: 'any',
	broadcast: 'auto')~> lookup1
lookup1, DimEvent lookup(OdsOpportunity@EventID == DimEvent@EventID,
	multiple: false,
	pickup: 'any',
	broadcast: 'auto')~> lookup2
lookup2, DimLead lookup(LeadID == Lead_Code,
	multiple: false,
	pickup: 'any',
	broadcast: 'auto')~> lookup3
lookup3 derive(Execution_Date = currentUTC(),
		{RetainedY/N} = toString({RetainedY/N})) ~> derivedColumn1
derivedColumn1 alterRow(upsertIf(1==1)) ~> alterRow1
alterRow1 sink(allowSchemaDrift: true,
	validateSchema: false,
	input(
		Opportunity_ID as integer,
		Event_ID as integer,
		Customer_ID as integer,
		Lead_ID as integer,
		OpportunityNumber as string,
		OpportunityId as string,
		StageCode as string,
		RequesterID as string,
		AgentID as string,
		DiscountAmount as decimal(38,2),
		RequestorType as string,
		TotalAmountofOpportunity as decimal(38,2),
		TradeAssocID as string,
		Status as string,
		{CreatedOn-Opportunity} as string,
		NetSQMofOpportunity as decimal(38,2),
		{RetainedY/N} as string,
		OnwerID as string,
		ProbabilityCode as long,
		OpportunityClosingDate as timestamp,
		Execution_Date as timestamp,
		SourceName as string,
		OwnerIdName as string,
		Contact_GR_ID as integer
	),
	deletable:false,
	insertable:true,
	updateable:false,
	upsertable:true,
	keys:['OpportunityId'],
	format: 'table',
	staged: true,
	allowCopyCommand: true,
	skipDuplicateMapInputs: true,
	skipDuplicateMapOutputs: true,
	errorHandlingOption: 'stopOnFirstError',
	mapColumn(
		Event_ID = DimEvent@Event_ID,
		Customer_ID = Contact_ID,
		Lead_ID,
		OpportunityNumber,
		OpportunityId,
		StageCode = StagecodeValue,
		RequesterID,
		AgentID,
		DiscountAmount,
		RequestorType = requestorTypeValue,
		TotalAmountofOpportunity,
		TradeAssocID,
		Status = OdsOpportunity@Status,
		{CreatedOn-Opportunity},
		NetSQMofOpportunity,
		{RetainedY/N},
		OnwerID,
		ProbabilityCode,
		OpportunityClosingDate,
		Execution_Date,
		SourceName = dwtc_oppsourcename,
		Contact_GR_ID
	)) ~> sink1