source(output(
		owneridname as string,
		ownerid as string,
		leadqualitycode as long,
		createdbyname as string,
		statecode as long,
		leadid as string,
		createdon as string,
		dwtc_eventsectorname as string,
		dwtc_sectorname as string,
		qualifyingopportunityidname as string,
		dwtc_countryname as string,
		dwtc_leadsourcename as string,
		statuscode as long,
		dwtc_eventsectname as string,
		dwtc_sponsorship as boolean,
		ccs_eventname as string,
		dwtc_sourcetype as long,
		fullname as string,
		dwtc_industryname as string,
		modifiedon as timestamp,
		LeadSourceCode as long,
		EventID as string,
		ContactID as string,
		emailaddress1 as string,
		firstname as string,
		lastname as string,
		dwtc_designationlevel as long,
		dwtc_jobfunction as long,
		jobtitle as string,
		emailaddress2 as string,
		MobilePhone2 as string,
		MobilePhone as string,
		address1_line1 as string,
		address1_line2 as string,
		dwtc_citylookupname as string,
		address1_postalcode as string,
		dwtc_regionname as string,
		modifiedby as string,
		CompanyName as string,
		State as string,
		Prefix as long,
		Channel as string,
		Medium as string,
		CompaignName as string,
		CompaignID as string,
		Forname as string,
		Tracking_ID as string,
		ccs_q1 as string,
		ccs_q2 as string,
		ccs_q3 as string,
		ccs_q4 as string,
		ccs_q5 as string,
		ccs_q6 as string,
		ccs_q7 as string,
		ccs_q8 as string,
		ccs_q9 as string,
		ccs_q10 as string,
		ccs_q11 as string,
		ccs_q12 as string,
		ccs_q13 as string,
		ccs_q14 as string,
		ccs_q15 as string,
		ccs_q16 as string,
		ccs_q17 as string,
		ccs_q18 as string,
		ccs_q19 as string,
		ccs_q20 as string,
		PhoneNumber2 as string,
		PhoneNumber1 as string,
		grid as string,
		leadSourceValue as string,
		leadQualityValue as string,
		stausValue as string,
		seniorityLevel as string
	),
	allowSchemaDrift: true,
	validateSchema: false,
	isolationLevel: 'READ_UNCOMMITTED',
	query: '  select c.*, \n   CONVERT(NVARCHAR(16),hashbytes(\'md5\',concat(upper(replace(c.[emailaddress1],\' \',\'\')),COALESCE(soundex(replace(c.FirstName,\' \',\'\')),\'NA\')\n+COALESCE(soundex(replace(c.LastName,\' \',\'\')),\'NA\')\n+COALESCE(soundex(replace(c.CompanyName,\' \',\'\')),\'NA\'))),2) grid, \n  \n  s.[value] as leadSourceValue, q.[value] as leadQualityValue,statuscode.[value] as stausValue , seniorityLevel.[value] as seniorityLevel\n  FROM [ods].[EM_Lead_CRM] c left join (select * from \n  [ods].[EM_StringMap_CRM]  a \n  where  [objecttypecode] = \'lead\' and [attributename]=\'leadsourcecode\') s\n  on c.[LeadSourceCode]=s.[attributevalue] left join (select * from \n  [ods].[EM_StringMap_CRM]  a \n  where  [objecttypecode] = \'lead\' and [attributename]=\'leadqualitycode\') q\n  on c.[leadqualitycode]=q.[attributevalue]  left join (select * from \n  [ods].[EM_StringMap_CRM]  a \n  where  [objecttypecode] = \'lead\' and [attributename]=\'statuscode\') statuscode\n  on c.[statuscode]=statuscode.[attributevalue] left join (select * from \n  [ods].[EM_StringMap_CRM]  a \n  where  [objecttypecode] = \'lead\' and [attributename]=\'dwtc_designationlevel\') seniorityLevel\n  on c.[dwtc_designationlevel]=seniorityLevel.[attributevalue]',
	format: 'query',
	staged: true) ~> OdsLead
source(output(
		Event_ID as integer,
		EventID as string,
		EventName as string,
		ShowName as string,
		ShowName2 as string,
		TypeID as long,
		EventStatus as long,
		EventStartDate as date,
		ShellScheme as decimal(38,2),
		SpecialStands as decimal(38,2),
		OutdoorSpaceOnly as decimal(38,2),
		SpaceOnlyAED as decimal(38,2),
		ShellSchemeSqm as decimal(38,2),
		SponsorshipAED as decimal(38,2),
		CorporateDeck as decimal(38,2),
		EventIDValue as string,
		ClusterName as string,
		Execution_Date as timestamp,
		PriceList as string,
		Category as string,
		Class as string,
		EventType as string,
		OrgName as string,
		EventTeam as string,
		EventAdmin as string,
		ShowDirector as string,
		Groupemailaddress as string,
		EBSEventID as string,
		Advance_pricecut_off_days as string,
		Standard_price_cut_off_days as string,
		Loyalty_product_cut_off_days as string,
		Enable_audit_functionality as string,
		Bulk_fulfill_order_flag as string
	),
	allowSchemaDrift: true,
	validateSchema: false,
	isolationLevel: 'READ_UNCOMMITTED',
	format: 'table',
	staged: true) ~> DimEvent
source(output(
		Country_ID as integer,
		Country as string,
		Country_Question_DomainID as string,
		Country_AnswerDomainID as string,
		{UAID-Country} as string,
		Country_Code as string,
		DWTC_region as string,
		{UAID-Region} as string,
		RegionDomainID as string,
		{UAID-Nationality} as string,
		NationalityDomainID as string,
		NationalityNew as string
	),
	allowSchemaDrift: true,
	validateSchema: false,
	isolationLevel: 'READ_UNCOMMITTED',
	format: 'table',
	staged: true) ~> DimCountry
OdsLead, DimEvent lookup(OdsLead@EventID == DimEvent@EventID,
	multiple: false,
	pickup: 'any',
	broadcast: 'auto')~> lookup1
lookup1, DimCountry lookup(dwtc_countryname == Country,
	multiple: false,
	pickup: 'any',
	broadcast: 'auto')~> lookup2
lookup2 derive(Execution_Date = currentUTC(),
		Prefix = toString(Prefix),
		createdon = toTimestamp(createdon)) ~> derivedColumn1
derivedColumn1 alterRow(upsertIf(1==1)) ~> alterRow1
alterRow1 sink(allowSchemaDrift: true,
	validateSchema: false,
	input(
		Lead_ID as integer,
		Event_ID as integer,
		Country_ID as integer,
		statecode as string,
		Lead_Code as string,
		DateCreated as timestamp,
		createdbyname as string,
		LeadSourceName as string,
		LeadSourceValue as string,
		LeadStatusReasonCode as string,
		LeadforSponsorship as string,
		LeadSourceType as string,
		FullName as string,
		IndustryName as string,
		DateModified as timestamp,
		OwnerID as string,
		LeadQualityValue as string,
		Execution_Date as timestamp,
		jobtitle as string,
		emailaddress2 as string,
		MobilePhone2 as string,
		MobilePhone as string,
		address1_line1 as string,
		address1_line2 as string,
		dwtc_citylookupname as string,
		address1_postalcode as string,
		dwtc_regionname as string,
		firstname as string,
		lastname as string,
		Email as string,
		modifiedby as string,
		Last_Verified_Date as timestamp,
		CompanyName as string,
		Country as string,
		SourceName as string,
		SourceType as string,
		City as string,
		State as string,
		Prefix as string,
		Channel as string,
		Medium as string,
		CampaignID as string,
		FormName as string,
		TrackingID as string,
		CampaignName as string,
		Web_Lead_Questionairesq1 as string,
		Web_Lead_Questionairesq2 as string,
		Web_Lead_Questionairesq3 as string,
		Web_Lead_Questionairesq4 as string,
		Web_Lead_Questionairesq5 as string,
		Web_Lead_Questionairesq6 as string,
		Web_Lead_Questionairesq7 as string,
		Web_Lead_Questionairesq8 as string,
		Web_Lead_Questionairesq9 as string,
		Web_Lead_Questionaires10 as string,
		Web_Lead_Questionaires11 as string,
		Web_Lead_Questionaires12 as string,
		Web_Lead_Questionaires13 as string,
		Web_Lead_Questionaires14 as string,
		Web_Lead_Questionaires15 as string,
		Web_Lead_Questionaires16 as string,
		Web_Lead_Questionaires17 as string,
		Web_Lead_Questionaires18 as string,
		Web_Lead_Questionaires19 as string,
		Web_Lead_Questionaires20 as string,
		GR_ID as string,
		Contact_GR_ID as integer,
		seniorityLevel as string,
		PhoneNumber1 as string,
		PhoneNumber2 as string
	),
	deletable:false,
	insertable:true,
	updateable:false,
	upsertable:true,
	keys:['Lead_Code'],
	format: 'table',
	staged: true,
	allowCopyCommand: true,
	skipDuplicateMapInputs: true,
	skipDuplicateMapOutputs: true,
	errorHandlingOption: 'stopOnFirstError',
	mapColumn(
		Event_ID,
		Country_ID,
		statecode = stausValue,
		Lead_Code = leadid,
		DateCreated = createdon,
		createdbyname,
		LeadSourceName = dwtc_leadsourcename,
		LeadSourceValue = leadSourceValue,
		FullName = fullname,
		IndustryName = dwtc_industryname,
		DateModified = modifiedon,
		OwnerID = ownerid,
		LeadQualityValue = leadQualityValue,
		Execution_Date,
		jobtitle,
		emailaddress2,
		MobilePhone2,
		MobilePhone,
		address1_line1,
		address1_line2,
		dwtc_citylookupname,
		address1_postalcode,
		dwtc_regionname,
		firstname,
		lastname,
		Email = emailaddress1,
		modifiedby,
		CompanyName,
		Country = dwtc_countryname,
		LeadSourceName = dwtc_leadsourcename,
		SourceType = dwtc_sourcetype,
		City = dwtc_citylookupname,
		State,
		Prefix,
		Channel,
		Medium,
		CampaignID = CompaignID,
		CampaignName = CompaignName,
		FormName = Forname,
		TrackingID = Tracking_ID,
		seniorityLevel,
		GR_ID = grid,
		PhoneNumber1,
		PhoneNumber2,
		each(match(startsWith(name,'ccs_q')),
			concat('Web_Lead_Questionaires',right($$,2)) = $$)
	)) ~> sink1