{
    "name": "DF_Load_FactSalesOrder",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "SalesOrder_CRM",
                        "type": "DatasetReference"
                    },
                    "name": "OdsSalesOrder"
                },
                {
                    "dataset": {
                        "referenceName": "DIM_CONTACT_CRM",
                        "type": "DatasetReference"
                    },
                    "name": "DimContact"
                },
                {
                    "dataset": {
                        "referenceName": "DIM_OPPORTUNITY",
                        "type": "DatasetReference"
                    },
                    "name": "DimOpportunity"
                },
                {
                    "dataset": {
                        "referenceName": "Dim_Contract",
                        "type": "DatasetReference"
                    },
                    "name": "DimContract"
                },
                {
                    "dataset": {
                        "referenceName": "DimEvent",
                        "type": "DatasetReference"
                    },
                    "name": "DimEvent"
                },
                {
                    "dataset": {
                        "referenceName": "Dev_Account_CRM",
                        "type": "DatasetReference"
                    },
                    "name": "OdsAccountCrm"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "FACT_SALESORDER",
                        "type": "DatasetReference"
                    },
                    "name": "sink1"
                }
            ],
            "transformations": [
                {
                    "name": "lookup1"
                },
                {
                    "name": "lookup2"
                },
                {
                    "name": "lookup4"
                },
                {
                    "name": "derivedColumn1"
                },
                {
                    "name": "lookup5"
                },
                {
                    "name": "alterRow1"
                },
                {
                    "name": "lookup6"
                }
            ],
            "scriptLines": [
                "source(output(",
                "          StatusCode as long,",
                "          GrossSQM as decimal(38,2),",
                "          dwtc_areyoulookingtoraisefunds as boolean,",
                "          dwtc_whatarethemainreasonsforyoutoexhibit as string,",
                "          OpportunitID as string,",
                "          NetSqm as decimal(38,2),",
                "          dwtc_areyoulookingtosetupofficeindubai as boolean,",
                "          CreatedOn as string,",
                "          ordernumber as string,",
                "          dwtc_whichstageoffundraisingareyou as long,",
                "          dwtc_yearfounded as long,",
                "          dwtc_emiratistartup as boolean,",
                "          dwtc_whattypeofcompanydoyouwanttomeet as long,",
                "          EventID as string,",
                "          {Amount-Order} as decimal(38,2),",
                "          dwtc_whatisyourcompanysmostrecentvaluation as long,",
                "          dwtc_contract as string,",
                "          DimX as string,",
                "          dwtc_womenledstartup as boolean,",
                "          dwtc_areyoucurrentmemberofaacceleratorincubato as boolean,",
                "          dwtc_orderstandnumber as string,",
                "          dwtc_firsttimeindubaiexhibitor as boolean,",
                "          PPKID as string,",
                "          CustomerID as string,",
                "          OrderType as long,",
                "          DimY as string,",
                "          salesorderid as string,",
                "          dwtc_awardwinningstartup as boolean,",
                "          ccs_exhibitorpoint as long,",
                "          dwtc_originalcreatedon as timestamp,",
                "          dwtc_doyoucurrentlyhaveanyinvestors as boolean,",
                "          dwtc_requestorid as string,",
                "          ContactID as string,",
                "          BillToCompany as string,",
                "          BillToContact as string,",
                "          ShipToCompany as string,",
                "          ShipToCompanyName as string,",
                "          Internal as boolean,",
                "          RequesterType as long,",
                "          EventSector as string,",
                "          StandType as long,",
                "          ProposalNumber as string,",
                "          ExhibitorPortalContact as string,",
                "          Ownerid as string,",
                "          ccs_agentpoint as long,",
                "          CompanyID as string,",
                "          barter as string,",
                "          statusCodeValue as string,",
                "          orderTypeValue as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     query: 'select c.*, proposal.barter,statuscode.[value] as statusCodeValue, ortype.[value] as orderTypeValue\\n  FROM [ods].[EM_SalesOrder_CRM] c\\n left join [ods].[EM_Contracts_CRM] odscontract on c.dwtc_contract=odscontract.ContractID\\n  left join em_dwh.dim_contract contract on odscontract.contractid=contract.contractid\\n left join em_dwh.dim_proposal proposal on contract.proposal_id=proposal.proposal_id\\n  left join (select * from \\n  [ods].[EM_StringMap_CRM]  a \\n  where  [objecttypecode] = \\'salesorder\\' and [attributename]=\\'statuscode\\') statuscode\\n  on c.[StatusCode]=statuscode.[attributevalue]  left join (select * from \\n  [ods].[EM_StringMap_CRM]  a \\n  where  [objecttypecode] = \\'salesorder\\' and [attributename]=\\'dwtc_shellspacedd\\') ortype\\n  on c.[OrderType]=ortype.[attributevalue]',",
                "     format: 'query',",
                "     staged: true) ~> OdsSalesOrder",
                "source(output(",
                "          Contact_ID as integer,",
                "          Contact_Code as string,",
                "          Email as string,",
                "          CompanyName as string,",
                "          FirstName as string,",
                "          LastName as string,",
                "          JobTitle as string,",
                "          DesignationLevel as string,",
                "          Statecode as string,",
                "          DateModified as timestamp,",
                "          DateCreated as timestamp,",
                "          MobilePhone as string,",
                "          ContactType as string,",
                "          Contact_GR_ID as integer,",
                "          Company_ID as integer,",
                "          Execution_Date as timestamp,",
                "          Nationality as string,",
                "          Jobfunction as long,",
                "          Emailaddress2 as string,",
                "          Address1_line1 as string,",
                "          Address1_line2 as string,",
                "          Cityname as string,",
                "          Address1_postalcode as string,",
                "          Country as string,",
                "          Createdby as string,",
                "          Modifiedby as string,",
                "          GR_ID as string,",
                "          Status as string,",
                "          Prefix as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     format: 'table',",
                "     staged: true) ~> DimContact",
                "source(output(",
                "          Opportunity_ID as integer,",
                "          Event_ID as integer,",
                "          Customer_ID as integer,",
                "          Lead_ID as integer,",
                "          OpportunityNumber as string,",
                "          OpportunityId as string,",
                "          StageCode as string,",
                "          RequesterID as string,",
                "          AgentID as string,",
                "          DiscountAmount as decimal(38,2),",
                "          RequestorType as string,",
                "          TotalAmountofOpportunity as decimal(38,2),",
                "          TradeAssocID as string,",
                "          Status as string,",
                "          {CreatedOn-Opportunity} as string,",
                "          NetSQMofOpportunity as decimal(38,2),",
                "          {RetainedY/N} as string,",
                "          OnwerID as string,",
                "          ProbabilityCode as long,",
                "          OpportunityClosingDate as timestamp,",
                "          Execution_Date as timestamp",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     format: 'table',",
                "     staged: true) ~> DimOpportunity",
                "source(output(",
                "          Contract_ID as integer,",
                "          ContractID as string,",
                "          Event_ID as integer,",
                "          Opportunity_ID as integer,",
                "          Amount_Contract as decimal(38,2),",
                "          CreatedOn as timestamp,",
                "          NetSqm as decimal(38,2),",
                "          TypeOfContract as long,",
                "          OrderID as string,",
                "          HallName as string,",
                "          StandNumber as string,",
                "          StatusCode as string,",
                "          Execution_Date as timestamp",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     query: 'select * from [EM_DWH].[DIM_CONTRACT]\\n  ',",
                "     format: 'query',",
                "     staged: true) ~> DimContract",
                "source(output(",
                "          Event_ID as integer,",
                "          EventID as string,",
                "          EventName as string,",
                "          ShowName as string,",
                "          ShowName2 as string,",
                "          TypeID as long,",
                "          EventStatus as long,",
                "          EventStartDate as date,",
                "          ShellScheme as decimal(38,2),",
                "          SpecialStands as decimal(38,2),",
                "          OutdoorSpaceOnly as decimal(38,2),",
                "          SpaceOnlyAED as decimal(38,2),",
                "          ShellSchemeSqm as decimal(38,2),",
                "          SponsorshipAED as decimal(38,2),",
                "          CorporateDeck as decimal(38,2),",
                "          EventIDValue as string,",
                "          ClusterName as string,",
                "          Execution_Date as timestamp",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     format: 'table',",
                "     staged: true) ~> DimEvent",
                "source(output(",
                "          Account_ID as integer,",
                "          CountryID as string,",
                "          CountryName as string,",
                "          SectorName as string,",
                "          Name as string,",
                "          IndustryName as string,",
                "          CompanyID as string,",
                "          SubIndustryID as string,",
                "          POBox as string,",
                "          address1_line1 as string,",
                "          address2_line2 as string,",
                "          statecode as long,",
                "          address1_postalcode as string,",
                "          Region as string,",
                "          emailaddress1 as string,",
                "          websiteurl as string,",
                "          telephone2 as string,",
                "          dwtc_billingtosameasaddress1 as boolean,",
                "          dwtc_billingcityname as string,",
                "          dwtc_billingpostcodezipcode as string,",
                "          dwtc_billingcountryname as string,",
                "          dwtc_companyannualrev as long,",
                "          telephone1 as string,",
                "          City as string,",
                "          PrimaryContactID as string,",
                "          BillToContactName as string,",
                "          Company_ID as integer,",
                "          Execution_Date as timestamp",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     format: 'table',",
                "     staged: true) ~> OdsAccountCrm",
                "OdsSalesOrder, DimContact lookup(ContactID == Contact_Code,",
                "     multiple: false,",
                "     pickup: 'any',",
                "     broadcast: 'auto')~> lookup1",
                "lookup1, DimOpportunity lookup(OpportunitID == OpportunityId,",
                "     multiple: false,",
                "     pickup: 'any',",
                "     broadcast: 'auto')~> lookup2",
                "lookup5, DimEvent lookup(OdsSalesOrder@EventID == DimEvent@EventID,",
                "     multiple: false,",
                "     pickup: 'any',",
                "     broadcast: 'auto')~> lookup4",
                "lookup6 derive(Execution_Date = currentUTC(),",
                "          CreatedOn = toTimestamp(split(replace(OdsSalesOrder@CreatedOn,'T',' '), '.')[1]),",
                "          Internal = toString(Internal),",
                "          StandType = toString(StandType),",
                "          ccs_agentpoint = toString(ccs_agentpoint)) ~> derivedColumn1",
                "lookup2, DimContract lookup(dwtc_contract == ContractID,",
                "     multiple: false,",
                "     pickup: 'any',",
                "     broadcast: 'auto')~> lookup5",
                "derivedColumn1 alterRow(upsertIf(1==1)) ~> alterRow1",
                "lookup4, OdsAccountCrm lookup(upper(CustomerID) == upper(OdsAccountCrm@CompanyID),",
                "     multiple: false,",
                "     pickup: 'any',",
                "     broadcast: 'auto')~> lookup6",
                "alterRow1 sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     input(",
                "          Salesorderid as string,",
                "          StatusCode as string,",
                "          GrossSQM as decimal(38,2),",
                "          Contact_ID as integer,",
                "          Event_ID as integer,",
                "          Opportunity_ID as integer,",
                "          Contract_ID as integer,",
                "          NetSqm as decimal(38,2),",
                "          CreatedOn as timestamp,",
                "          Ordernumber as string,",
                "          Amount_Order as decimal(38,2),",
                "          DimX as string,",
                "          Orderstandnumber as string,",
                "          PPKID as string,",
                "          CustomerID as string,",
                "          OrderType as string,",
                "          DimY as string,",
                "          Awardwinningstartup as boolean,",
                "          Exhibitorpoint as long,",
                "          Originalcreatedon as timestamp,",
                "          Requestorid as string,",
                "          LookingToRaiseFunds as boolean,",
                "          MainReasonsToExhibit as string,",
                "          LookingToSetupDXBOffice as boolean,",
                "          FundraisingStage as long,",
                "          TypeOfCompanyWantToMeet as long,",
                "          MostRecentEvaluation as long,",
                "          IncubatorsAccelerators as boolean,",
                "          FirstTimeInMENA as boolean,",
                "          Execution_Date as timestamp,",
                "          Contact_GR_ID as integer,",
                "          Billtocompany as string,",
                "          Billtocontact as string,",
                "          ShipToCompany as string,",
                "          Internal as string,",
                "          RequestorType as string,",
                "          EventSector as string,",
                "          StandType as string,",
                "          ProposalNumber as string,",
                "          ExhibitorPortalContact as string,",
                "          ExhibitorPoints as string,",
                "          AgentPoints as string,",
                "          Company_ID as integer,",
                "          GlCode as string,",
                "          Amount_orderproduct as decimal(38,2),",
                "          barter as string",
                "     ),",
                "     deletable:false,",
                "     insertable:true,",
                "     updateable:false,",
                "     upsertable:true,",
                "     keys:['Salesorderid'],",
                "     format: 'table',",
                "     staged: true,",
                "     allowCopyCommand: true,",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     errorHandlingOption: 'stopOnFirstError',",
                "     mapColumn(",
                "          Salesorderid = salesorderid,",
                "          StatusCode = statusCodeValue,",
                "          GrossSQM,",
                "          Contact_ID,",
                "          Event_ID = DimEvent@Event_ID,",
                "          Opportunity_ID = DimOpportunity@Opportunity_ID,",
                "          Contract_ID,",
                "          NetSqm = OdsSalesOrder@NetSqm,",
                "          CreatedOn,",
                "          Ordernumber = ordernumber,",
                "          Amount_Order = {Amount-Order},",
                "          DimX,",
                "          Orderstandnumber = dwtc_orderstandnumber,",
                "          PPKID,",
                "          CustomerID,",
                "          OrderType = orderTypeValue,",
                "          DimY,",
                "          Awardwinningstartup = dwtc_awardwinningstartup,",
                "          Exhibitorpoint = ccs_exhibitorpoint,",
                "          Originalcreatedon = dwtc_originalcreatedon,",
                "          Requestorid = dwtc_requestorid,",
                "          LookingToRaiseFunds = dwtc_areyoulookingtoraisefunds,",
                "          MainReasonsToExhibit = dwtc_whatarethemainreasonsforyoutoexhibit,",
                "          LookingToSetupDXBOffice = dwtc_areyoulookingtosetupofficeindubai,",
                "          TypeOfCompanyWantToMeet = dwtc_whattypeofcompanydoyouwanttomeet,",
                "          MostRecentEvaluation = dwtc_whatisyourcompanysmostrecentvaluation,",
                "          IncubatorsAccelerators = dwtc_areyoucurrentmemberofaacceleratorincubato,",
                "          FirstTimeInMENA = dwtc_firsttimeindubaiexhibitor,",
                "          Execution_Date,",
                "          Contact_GR_ID,",
                "          Billtocompany = BillToCompany,",
                "          Billtocontact = BillToContact,",
                "          ShipToCompany,",
                "          Internal,",
                "          RequestorType,",
                "          EventSector,",
                "          StandType,",
                "          ProposalNumber,",
                "          ExhibitorPortalContact,",
                "          ExhibitorPoints = ccs_exhibitorpoint,",
                "          AgentPoints = ccs_agentpoint,",
                "          Company_ID = OdsAccountCrm@Company_ID,",
                "          barter",
                "     )) ~> sink1"
            ]
        }
    }
}