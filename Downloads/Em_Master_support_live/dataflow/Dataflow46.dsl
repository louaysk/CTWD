source(output(
		soundex_name as string,
		Email as string,
		FirstName as string,
		LastName as string,
		full_name as string,
		last_modified_date as timestamp,
		source as string,
		MobilePhone as string,
		MobilePhone2 as string,
		PhoneNumber1 as string,
		PhoneNumber2 as string,
		IsSubscribed as string,
		JobTitle as string,
		IsBounced as string,
		Country as string,
		DateCreated as timestamp,
		Address_line_1 as string,
		Address_line_2 as string,
		Nationality as string,
		City as string,
		Prefix as string,
		Region as string,
		ZIP_Postal_Code as string,
		State as string,
		Createdby as string,
		Modifiedby as string,
		ContactType as string,
		Jobfunction as string,
		Statuscode as string,
		SeniorityLevel as string
	),
	allowSchemaDrift: true,
	validateSchema: false,
	isolationLevel: 'READ_UNCOMMITTED',
	query: '  SELECT   COALESCE(soundex(replace(FirstName,\' \',\'\')),\'NA\')\n         +COALESCE(soundex(replace(LastName,\' \',\'\')),\'NA\') \n         +COALESCE(soundex(replace(CompanyName,\' \',\'\')),\'NA\')   AS soundex_name,\n     replace(email,\' \',\'\') Email, FirstName, LastName,replace(FirstName+lastName,\' \',\'\') as full_name, DateModified as last_modified_date, \'CRM\' AS source,\n      [MobilePhone] as MobilePhone ,[MobilePhone2] as MobilePhone2,PhoneNumber1 as PhoneNumber1,[PhoneNumber2] as PhoneNumber2,null as [IsSubscribed],JobTitle,null as [IsBounced],[Country],DateCreated,Address1_line1 as Address_line_1,Address1_line2 as Address_line_2,Nationality,Cityname as City,Prefix,null as Region,Address1_postalcode as ZIP_Postal_Code,Statecode as [State],Createdby,Modifiedby,ContactType,CAST(Jobfunction AS VARCHAR)as Jobfunction,[Status] as Statuscode,DesignationLevel as SeniorityLevel\n    FROM [EM_DWH].[DEV_CONTACT_CRM]\n    UNION ALL\n    SELECT  COALESCE(soundex(replace(FirstName,\' \',\'\')),\'NA\')\n         +COALESCE(soundex(replace(LastName,\' \',\'\')),\'NA\') \n         +COALESCE(soundex(replace(CompanyName,\' \',\'\')),\'NA\')   AS soundex_name,\n         replace(email,\' \',\'\') email,FirstName, LastName,replace([FirstName]+[LastName],\' \',\'\') as Full_Name, [DateModified] as last_modified_date, \'Eloqua\' AS source,\n         [MobilePhone] as MobilePhone,[MobilePhone2] as MobilePhone2,null as PhoneNumber1,null as PhoneNumber2,[IsSubscribed],JobTitle,[IsBounced],[Country],DateCreated, [Address] as Address_line_1,null as Address_line_2,Nationality,City,null as Prefix,Region, null as ZIP_Postal_Code,null as [State],null as Createdby,null as Modifiedby,null as ContactType,Job_Function as Jobfunction,null as Statuscode,[Job_Role] as SeniorityLevel\n    FROM [EM_DWH].[DEV_CONTACT_ELQ] \n    UNION ALL\n    SELECT  COALESCE(soundex(replace(FirstName,\' \',\'\')),\'NA\')\n         +COALESCE(soundex(replace(LastName,\' \',\'\')),\'NA\') \n         +COALESCE(soundex(replace(CompanyName,\' \',\'\')),\'NA\')   AS soundex_name,\n         replace(email,\' \',\'\') AS email,FirstName,lastName, replace([FirstName]+[LastName],\' \',\'\') as Full_Name, [Reg_Date] as last_modified_date, \'REG_FILE\' AS source,\n         [MobilePhone]as MobilePhone,[MobilePhone2]as MobilePhone2,[PhoneNumber1] as PhoneNumber1,[PhoneNumber2] as PhoneNumber2 ,null as [IsSubscribed],Designation JobTitle,null as [IsBounced],[Country],[Reg_Date] as DateCreated,Address_line_1,Address_line_2,Nationality, City_of_Company as City,Prefix,Region,Postal_Code as ZIP_Postal_Code,[State],null as Createdby,null as Modifiedby,null as ContactType,JobFunction,null as Statuscode,DesignationLevel as SeniorityLevel\n    FROM [EM_DWH].[DEV_CONTACT_REGISTRATION]  \n    UNION ALL\n     SELECT  COALESCE(soundex(replace(FirstName,\' \',\'\')),\'NA\')\n         +COALESCE(soundex(replace(LastName,\' \',\'\')),\'NA\') \n         +COALESCE(soundex(replace(CompanyName,\' \',\'\')),\'NA\')   AS soundex_name,\n         replace(email,\' \',\'\') email, FirstName,lastName, replace(FirstName+lastName,\' \',\'\') as full_name, DateModified as last_modified_date, \'LEAD\' AS source,\n         [MobilePhone] as MobilePhone,[MobilePhone2] as MobilePhone2 ,[PhoneNumber1] as PhoneNumber1,[PhoneNumber2] as PhoneNumber2 ,null as [IsSubscribed],JobTitle,null as [IsBounced],[Country],DateCreated,address1_line1 as Address_line_1,address1_line2 as Address_line_2,null as Nationality,dwtc_citylookupname as City,Null as Prefix,dwtc_regionname as Region,address1_postalcode as ZIP_Postal_Code,statecode as [State],createdbyname as Createdby,modifiedby as Modifiedby,null as ContactType, null as JobFunction,null as Statuscode,seniorityLevel\n    FROM [EM_DWH].[DIM_LEAD]\n     UNION ALL\n     SELECT   COALESCE(soundex(replace(FirstName,\' \',\'\')),\'NA\')\n         +COALESCE(soundex(replace(LastName,\' \',\'\')),\'NA\') \n         +COALESCE(soundex(replace(CompanyName,\' \',\'\')),\'NA\')   AS soundex_name,\n     replace(email,\' \',\'\') Email, FirstName, LastName,replace(FirstName+lastName,\' \',\'\') as full_name, Research_Date as last_modified_date, \'Research\' AS source,\n      [PhoneNumber]  as MobilePhone,[MobilePhone] as  MobilePhone2, null as PhoneNumber1,null as PhoneNumber2,null as [IsSubscribed], Designation as JobTitle,null as [IsBounced],[Country], Research_Date as DateCreated,Address_line_1 as Address_line_1,Address_line_2 as Address_line_2,null as Nationality,City,Prefix,Region,ZIP_Postal_Code,[State],null as Createdby,null as Modifiedby,null as ContactType,null as Jobfunction,null as StatusCode,null as SeniorityLevel\n    FROM [EM_DWH].[DEV_DATA_RESEARCH]\n\n\n ',
	format: 'query',
	staged: true) ~> allContacts
source(output(
		soundex_name as string,
		email as string,
		FirstName as string,
		LastName as string,
		Full_Name as string,
		last_modified_date as timestamp,
		source as string,
		MobilePhone as string,
		MobilePhone2 as string,
		PhoneNumber1 as string,
		PhoneNumber2 as string,
		IsSubscribed as string,
		Company as string,
		JobTitle as string,
		IsBounced as string,
		Country as string,
		DateCreated as timestamp,
		Address_line_1 as string,
		Address_line_2 as string,
		Nationality as string,
		City as string,
		Prefix as string,
		Region as string,
		ZIP_Postal_Code as string,
		State as string,
		Createdby as string,
		Modifiedby as string,
		ContactType as integer,
		Jobfunction as string,
		Statuscode as integer,
		SeniorityLevel as string
	),
	allowSchemaDrift: true,
	validateSchema: false,
	isolationLevel: 'READ_UNCOMMITTED',
	query: 'SELECT  COALESCE(soundex(replace(FirstName,\' \',\'\')),\'NA\')\n         +COALESCE(soundex(replace(LastName,\' \',\'\')),\'NA\') \n         +COALESCE(soundex(replace(CompanyName,\' \',\'\')),\'NA\')   AS soundex_name,\n         replace(email,\' \',\'\') email,FirstName, LastName,replace([FirstName]+[LastName],\' \',\'\') as Full_Name, [DateModified] as last_modified_date, \'Eloqua\' AS source,\n         [MobilePhone] as MobilePhone,[MobilePhone2] as MobilePhone2,null as PhoneNumber1,null as PhoneNumber2,[IsSubscribed],CompanyName [Company],JobTitle,[IsBounced],[Country],DateCreated, [Address] as Address_line_1,null as Address_line_2,Nationality,City,null as Prefix,Region, null as ZIP_Postal_Code,null as [State],null as Createdby,null as Modifiedby,null as ContactType,Job_Function as Jobfunction,null as Statuscode,[Job_Role] as SeniorityLevel\n    FROM [EM_DWH].[DEV_CONTACT_ELQ] \n    UNION ALL\n    SELECT  COALESCE(soundex(replace(FirstName,\' \',\'\')),\'NA\')\n         +COALESCE(soundex(replace(LastName,\' \',\'\')),\'NA\') \n         +COALESCE(soundex(replace(CompanyName,\' \',\'\')),\'NA\')   AS soundex_name,\n         replace(email,\' \',\'\') AS email,FirstName,lastName, replace([FirstName]+[LastName],\' \',\'\') as Full_Name, [Reg_Date] as last_modified_date, \'REG_FILE\' AS source,\n         [MobilePhone]as MobilePhone,[MobilePhone2]as MobilePhone2,[PhoneNumber1] as PhoneNumber1,[PhoneNumber2] as PhoneNumber2 ,null as [IsSubscribed],CompanyName AS [Company],Designation JobTitle,null as [IsBounced],[Country],[Reg_Date] as DateCreated,Address_line_1,Address_line_2,Nationality, City_of_Company as City,Prefix,Region,Postal_Code as ZIP_Postal_Code,[State],null as Createdby,null as Modifiedby,null as ContactType,JobFunction,null as Statuscode,DesignationLevel as SeniorityLevel\n    FROM [EM_DWH].[DEV_CONTACT_REGISTRATION]  \n    UNION ALL\n     SELECT  COALESCE(soundex(replace(FirstName,\' \',\'\')),\'NA\')\n         +COALESCE(soundex(replace(LastName,\' \',\'\')),\'NA\') \n         +COALESCE(soundex(replace(CompanyName,\' \',\'\')),\'NA\')   AS soundex_name,\n         replace(email,\' \',\'\') email, FirstName,lastName, replace(FirstName+lastName,\' \',\'\') as full_name, DateModified as last_modified_date, \'LEAD\' AS source,\n         [MobilePhone] as MobilePhone,[MobilePhone2] as MobilePhone2 ,[PhoneNumber1] as PhoneNumber1,[PhoneNumber2] as PhoneNumber2 ,null as [IsSubscribed],companyname as [Company],JobTitle,null as [IsBounced],[Country],DateCreated,address1_line1 as Address_line_1,address1_line2 as Address_line_2,null as Nationality,dwtc_citylookupname as City,Null as Prefix,dwtc_regionname as Region,address1_postalcode as ZIP_Postal_Code,statecode as [State],createdbyname as Createdby,modifiedby as Modifiedby,null as ContactType, null as JobFunction,null as Statuscode,seniorityLevel\n    FROM [EM_DWH].[DIM_LEAD]\n     UNION ALL\n     SELECT   COALESCE(soundex(replace(FirstName,\' \',\'\')),\'NA\')\n         +COALESCE(soundex(replace(LastName,\' \',\'\')),\'NA\') \n         +COALESCE(soundex(replace(CompanyName,\' \',\'\')),\'NA\')   AS soundex_name,\n     replace(email,\' \',\'\') Email, FirstName, LastName,replace(FirstName+lastName,\' \',\'\') as full_name, Research_Date as last_modified_date, \'Research\' AS source,\n      [PhoneNumber]  as MobilePhone,[MobilePhone] as  MobilePhone2, null as PhoneNumber1,null as PhoneNumber2,null as [IsSubscribed],companyname as [Company], Designation as JobTitle,null as [IsBounced],[Country], Research_Date as DateCreated,Address_line_1 as Address_line_1,Address_line_2 as Address_line_2,null as Nationality,City,Prefix,Region,ZIP_Postal_Code,[State],null as Createdby,null as Modifiedby,null as ContactType,null as Jobfunction,null as StatusCode,null as SeniorityLevel\n    FROM [EM_DWH].[DEV_DATA_RESEARCH]\n\n\n ',
	format: 'query',
	staged: true) ~> nonCRMcontact
nonCRMcontact select(mapColumn(
		soundex_name,
		email,
		FirstName,
		LastName,
		Full_Name,
		last_modified_date,
		source,
		MobilePhone,
		MobilePhone2,
		PhoneNumber1,
		PhoneNumber2,
		IsSubscribed,
		Company,
		JobTitle,
		IsBounced,
		Country,
		DateCreated,
		Address_line_1,
		Address_line_2,
		Nationality,
		City,
		Prefix,
		Region,
		ZIP_Postal_Code,
		State,
		Createdby,
		Modifiedby,
		ContactType,
		Jobfunction,
		Statuscode,
		SeniorityLevel
	),
	skipDuplicateMapInputs: true,
	skipDuplicateMapOutputs: true) ~> select2
allContacts select(mapColumn(
		soundex_name,
		Email,
		FirstName,
		LastName,
		full_name,
		last_modified_date,
		source,
		MobilePhone,
		MobilePhone2,
		PhoneNumber1,
		PhoneNumber2,
		IsSubscribed,
		JobTitle,
		IsBounced,
		Country,
		DateCreated,
		Address_line_1,
		Address_line_2,
		Nationality,
		City,
		Prefix,
		Region,
		ZIP_Postal_Code,
		State,
		Createdby,
		Modifiedby,
		ContactType,
		Jobfunction,
		Statuscode,
		SeniorityLevel
	),
	skipDuplicateMapInputs: true,
	skipDuplicateMapOutputs: true) ~> select3
select3 derive(Date_execution = currentTimestamp()) ~> derivedColumn1
select2 derive(Date_execution = currentTimestamp(),
		ContactType = toString(ContactType)) ~> derivedColumn2
derivedColumn1 sink(allowSchemaDrift: true,
	validateSchema: false,
	input(
		soundex_name as string,
		Email as string,
		FirstName as string,
		LastName as string,
		full_name as string,
		last_modified_date as timestamp,
		source as string,
		MobilePhone as string,
		IsSubscribed as string,
		JobTitle as string,
		IsBounced as string,
		Country as string,
		DateCreated as timestamp,
		Address_line_1 as string,
		Address_line_2 as string,
		Nationality as string,
		City as string,
		Prefix as string,
		Region as string,
		ZIP_Postal_Code as string,
		State as string,
		Createdby as string,
		Modifiedby as string,
		ContactType as string,
		Jobfunction as string,
		Statuscode as string,
		SeniorityLevel as string
	),
	deletable:false,
	insertable:true,
	updateable:false,
	upsertable:false,
	truncate:true,
	format: 'table',
	staged: true,
	allowCopyCommand: true,
	skipDuplicateMapInputs: true,
	skipDuplicateMapOutputs: true,
	errorHandlingOption: 'stopOnFirstError') ~> sink1
derivedColumn2 sink(allowSchemaDrift: true,
	validateSchema: false,
	input(
		soundex_name as string,
		email as string,
		FirstName as string,
		LastName as string,
		Full_Name as string,
		last_modified_date as timestamp,
		source as string,
		MobilePhone as string,
		IsSubscribed as string,
		Company as string,
		JobTitle as string,
		IsBounced as string,
		Country as string,
		DateCreated as timestamp,
		Address_line_1 as string,
		Address_line_2 as string,
		Nationality as string,
		City as string,
		Prefix as string,
		Region as string,
		ZIP_Postal_Code as string,
		State as string,
		Createdby as string,
		Modifiedby as string,
		ContactType as string,
		JobFunction as string,
		Statuscode as string,
		SeniorityLevel as string
	),
	deletable:false,
	insertable:true,
	updateable:false,
	upsertable:false,
	truncate:true,
	format: 'table',
	staged: true,
	allowCopyCommand: true,
	skipDuplicateMapInputs: true,
	skipDuplicateMapOutputs: true,
	errorHandlingOption: 'stopOnFirstError',
	mapColumn(
		soundex_name,
		email,
		FirstName,
		LastName,
		Full_Name,
		last_modified_date,
		source,
		MobilePhone,
		IsSubscribed,
		Company,
		JobTitle,
		IsBounced,
		Country,
		DateCreated,
		Address_line_1,
		Address_line_2,
		Nationality,
		City,
		Prefix,
		Region,
		ZIP_Postal_Code,
		State,
		Createdby,
		Modifiedby,
		ContactType,
		JobFunction = Jobfunction,
		Statuscode,
		SeniorityLevel
	)) ~> sink2