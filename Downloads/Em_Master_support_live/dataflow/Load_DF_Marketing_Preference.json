{
    "name": "Load_DF_Marketing_Preference",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "ODS_Visitors",
                        "type": "DatasetReference"
                    },
                    "name": "source1"
                },
                {
                    "dataset": {
                        "referenceName": "Dim_QMaster",
                        "type": "DatasetReference"
                    },
                    "name": "DimQmater"
                },
                {
                    "dataset": {
                        "referenceName": "DimEvent",
                        "type": "DatasetReference"
                    },
                    "name": "DimEvent"
                },
                {
                    "dataset": {
                        "referenceName": "DIM_CONTACT_REGISTRATION",
                        "type": "DatasetReference"
                    },
                    "name": "DimContactReg"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "Fact_VISTOR_MP",
                        "type": "DatasetReference"
                    },
                    "name": "sink1"
                }
            ],
            "transformations": [
                {
                    "name": "lookup1"
                },
                {
                    "name": "select1"
                },
                {
                    "name": "lookup2"
                },
                {
                    "name": "derivedColumn1"
                },
                {
                    "name": "flatten1"
                },
                {
                    "name": "derivedColumn2"
                },
                {
                    "name": "flatten2"
                },
                {
                    "name": "filter1"
                },
                {
                    "name": "lookup3"
                }
            ],
            "scriptLines": [
                "source(output(",
                "          Index as string,",
                "          ID_Reg as string,",
                "          EventName as string,",
                "          Year as string,",
                "          Filename as string,",
                "          QID as string,",
                "          Question as string,",
                "          Answers as string,",
                "          UAID as string,",
                "          Type as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     query: 'SELECT  [Index],\\n [Index]+[Filename] as \\'ID_Reg\\'\\n      ,[EventName]\\n      ,[Year]\\n      ,[Filename]\\n      ,[QID]\\n      ,[Question]\\n      ,[Answers]\\n      ,[UAID]\\n      ,[Type]\\n  FROM [ods].[EM_Visitors]\\n  where  ([EventName] <> \\'DO NOT IMPORT\\' or [EventName] is null)  and [QID] is not null \\n  and  [FileName] NOT IN (\\n SELECT [FileName]\\n  FROM [EM_DWH].[Fact_VISTOR_MARKETING_PREFERENCES]\\n  )\\n',",
                "     format: 'query',",
                "     staged: true) ~> source1",
                "source(output(",
                "          Question_ID as integer,",
                "          QID as string,",
                "          UAID as string,",
                "          Display_Question as string,",
                "          Question as string,",
                "          ALID as string,",
                "          Answers_List as string,",
                "          Question_Type as string,",
                "          Question_ValueTypeNew as string,",
                "          TypeNew as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     format: 'table',",
                "     staged: true) ~> DimQmater",
                "source(output(",
                "          Event_ID as integer,",
                "          EventID as string,",
                "          EventName as string,",
                "          ShowName as string,",
                "          ShowName2 as string,",
                "          TypeID as long,",
                "          EventStatus as long,",
                "          EventStartDate as date,",
                "          ShellScheme as decimal(38,2),",
                "          SpecialStands as decimal(38,2),",
                "          OutdoorSpaceOnly as decimal(38,2),",
                "          SpaceOnlyAED as decimal(38,2),",
                "          ShellSchemeSqm as decimal(38,2),",
                "          SponsorshipAED as decimal(38,2),",
                "          CorporateDeck as decimal(38,2),",
                "          EventIDValue as string,",
                "          ClusterName as string,",
                "          Execution_Date as timestamp",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     format: 'table',",
                "     staged: true) ~> DimEvent",
                "source(output(",
                "          Contact_ID as integer,",
                "          ID as string,",
                "          Index as string,",
                "          Event_ID as integer,",
                "          Country_ID as integer,",
                "          FileName as string,",
                "          Address_line_1 as string,",
                "          Address_line_2 as string,",
                "          Address_line_3 as string,",
                "          AGE as string,",
                "          {Bill_to-Address_line_1} as string,",
                "          {Bill_to-Address_line_2} as string,",
                "          {Bill_to-Address_line_3} as string,",
                "          {Bill_to-City_of_Company} as string,",
                "          {Bill_to-Company_Name} as string,",
                "          {Bill_to-Country} as string,",
                "          {Bill_to-Designation} as string,",
                "          {Bill_to-First_Name} as string,",
                "          {Bill_to-Last_Name} as string,",
                "          {Bill_to-P.O._Box} as string,",
                "          {Bill_to-Postal_Code} as string,",
                "          {Bill_to-State} as string,",
                "          City_of_Company as string,",
                "          Company_Facebook as string,",
                "          Company_Instagram as string,",
                "          Company_Linkedin as string,",
                "          CompanyName as string,",
                "          Company_Snapchat as string,",
                "          Company_Twitter as string,",
                "          Company_Website as string,",
                "          Company_Youtube as string,",
                "          Country as string,",
                "          Data_Source as string,",
                "          Department as string,",
                "          Department_Other as string,",
                "          Designation as string,",
                "          {[DesignationLevel]} as string,",
                "          Designation_Level_Other as string,",
                "          Email as string,",
                "          Email_1 as string,",
                "          Emirates_ID_Passport_No as string,",
                "          Fax_Number as string,",
                "          FirstName as string,",
                "          FullName as string,",
                "          Gender as string,",
                "          JobFunction as string,",
                "          LANGUAGE_COMM as string,",
                "          LastName as string,",
                "          Middle_Name as string,",
                "          MobilePhone as string,",
                "          Mobile_Number_1 as string,",
                "          Nationality as string,",
                "          {P.O_Box} as string,",
                "          Personal_Facebook as string,",
                "          Personal_Instagram as string,",
                "          Personal_LinkedIn as string,",
                "          Personal_Pinterest as string,",
                "          Personal_Snapchat as string,",
                "          Personal_Twitter as string,",
                "          Personal_YouTube as string,",
                "          Phone_Extn as string,",
                "          Phone_Number as string,",
                "          Phone_Number_1 as string,",
                "          Postal_Code as string,",
                "          Prefix as string,",
                "          Region as string,",
                "          Source as string,",
                "          State as string,",
                "          Type_of_Data as string,",
                "          UAE_Resedency_Emirate as string,",
                "          Reg_Date as timestamp,",
                "          Contact_GR_ID as integer,",
                "          Execution_Date as timestamp,",
                "          DesignationLevel as string,",
                "          GR_ID as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     format: 'table',",
                "     staged: true) ~> DimContactReg",
                "source1, DimQmater lookup(source1@QID == DimQmater@QID,",
                "     multiple: false,",
                "     pickup: 'any',",
                "     broadcast: 'auto')~> lookup1",
                "derivedColumn1 select(mapColumn(",
                "          Index = source1@Index,",
                "          ID_Reg,",
                "          Filename = source1@Filename,",
                "          QID = source1@QID,",
                "          Question = source1@Question,",
                "          Answers,",
                "          Type,",
                "          Question_ID,",
                "          Event_ID = DimEvent@Event_ID,",
                "          Execution_Date,",
                "          Contact_ID,",
                "          Contact_GR_ID",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> select1",
                "lookup1, DimEvent lookup(upper(source1@EventName) == upper(DimEvent@EventName),",
                "     multiple: false,",
                "     pickup: 'any',",
                "     broadcast: 'auto')~> lookup2",
                "lookup3 derive(Execution_Date = currentUTC(),",
                "          Answers = split(Answers, ']')) ~> derivedColumn1",
                "select1 foldDown(unroll(Answers),",
                "     mapColumn(",
                "          Index,",
                "          ID_Reg,",
                "          Filename,",
                "          QID,",
                "          Question,",
                "          Answers,",
                "          Type,",
                "          Question_ID,",
                "          Event_ID,",
                "          Execution_Date,",
                "          Contact_ID,",
                "          Contact_GR_ID",
                "     ),",
                "     skipDuplicateMapInputs: false,",
                "     skipDuplicateMapOutputs: false) ~> flatten1",
                "flatten1 derive(Answers = split(Answers, ',')) ~> derivedColumn2",
                "derivedColumn2 foldDown(unroll(Answers),",
                "     mapColumn(",
                "          Index,",
                "          ID_Reg,",
                "          Filename,",
                "          QID,",
                "          Question,",
                "          Answers,",
                "          Type,",
                "          Question_ID,",
                "          Event_ID,",
                "          Execution_Date,",
                "          Contact_ID,",
                "          Contact_GR_ID",
                "     ),",
                "     skipDuplicateMapInputs: false,",
                "     skipDuplicateMapOutputs: false) ~> flatten2",
                "flatten2 filter(not(isNull(Answers))&&Answers!=' '&&Answers!='') ~> filter1",
                "lookup2, DimContactReg lookup(ID_Reg == ID,",
                "     multiple: false,",
                "     pickup: 'any',",
                "     broadcast: 'auto')~> lookup3",
                "filter1 sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     input(",
                "          Event_ID as integer,",
                "          Question_ID as integer,",
                "          ID_Reg as string,",
                "          Index as string,",
                "          FileName as string,",
                "          QID as string,",
                "          Question as string,",
                "          Type as string,",
                "          Answers as string,",
                "          Execution_Date as timestamp,",
                "          Contact_ID as integer,",
                "          Contact_GR_ID as integer",
                "     ),",
                "     deletable:false,",
                "     insertable:true,",
                "     updateable:false,",
                "     upsertable:false,",
                "     format: 'table',",
                "     staged: true,",
                "     allowCopyCommand: true,",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     errorHandlingOption: 'stopOnFirstError',",
                "     mapColumn(",
                "          Event_ID,",
                "          Question_ID,",
                "          ID_Reg,",
                "          Index,",
                "          FileName = Filename,",
                "          QID,",
                "          Question,",
                "          Type,",
                "          Answers,",
                "          Execution_Date,",
                "          Contact_ID,",
                "          Contact_GR_ID",
                "     )) ~> sink1"
            ]
        }
    }
}